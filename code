Questions are 
Basic :
Retrieve the total number of orders placed.
Calculate the total revenue generated from pizza sales.
Identify the highest-priced pizza.
Identify the most common pizza size ordered.
List the top 5 most ordered pizza types along with their quantities.


Intermediate :
Join the necessary tables to find the total quantity of each pizza category ordered.
Determine the distribution of orders by hour of the day.
Join relevant tables to find the category-wise distribution of pizzas.
Group the orders by date and calculate the average number of pizzas ordered per day.
Determine the top 3 most ordered pizza types based on revenue.

Advanced:
Calculate the percentage contribution of each pizza type to total revenue.
Analyze the cumulative revenue generated over time.
Determine the top 3 most ordered pizza types based on revenue for each pizza category.


1-- Retrieve the total number of orders placed. 


SELECT 
    COUNT(order_id) AS total_order
FROM
    orders; 


2-- Calculate the total revenue generated from pizza sales.

SELECT 
    round(sum(order_details.quantity * pizzas.price),2) AS total_sales
FROM
    order_details
        JOIN
    pizzas ON pizzas.pizza_id = order_details.pizza_id;

3-- Identify the highest-priced pizza.

SELECT 
    pizza_types.name, pizzas.price
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizza_types.pizza_type_id
ORDER BY pizzas.price DESC
LIMIT 1;



4-- Identify the most common pizza size ordered.
 
 
SELECT 
    pizzas.size,
    COUNT(order_details.order_details_id) AS order_count
FROM
    pizzas
        JOIN
    order_details ON pizzas.pizza_id = order_details.pizza_id
GROUP BY pizzas.size
ORDER BY order_count DESC
LIMIT 1 ;

5-- List the top 5 most ordered pizza types along with their quantities.

SELECT pizza_types.name, SUM(order_details.quantity) 
AS quantity FROM pizza_types JOIN pizzas ON 
pizza_types.pizza_type_id = pizzas.pizza_type_id
JOIN order_details ON 
pizzas.pizza_id = order_details.pizza_id
GROUP BY pizza_types.name
ORDER BY quantity DESC
LIMIT 5;


6--  Join the necessary tables to find the total quantity of each pizza category ordered.

SELECT pizza_types.category,
SUM(order_details.quantity) AS quantity
FROM pizza_types JOIN pizzas ON 
pizza_types.pizza_type_id = pizzas.pizza_type_id
JOIN order_details ON 
pizzas.pizza_id = order_details.pizza_id
GROUP BY pizza_types.category
ORDER BY quantity DESC;

7-- Determine the distribution of orders by hour of the day.

SELECT 
    HOUR(order_time), COUNT(order_id)
FROM
    orders
GROUP BY HOUR(order_time);

8-- Join relevant tables to find the category-wise distribution of pizzas.
 
 SELECT category, COUNT(category) AS count
FROM pizza_types
GROUP BY category
ORDER BY count DESC;

9-- Group the orders by date and calculate the average number of pizzas ordered per day.
SELECT ROUND(AVG(per_day), 0) AS avg
FROM (SELECT SUM(order_details.quantity) 
AS per_day, orders.order_date FROM
order_details JOIN orders ON 
order_details.order_id = orders.order_id
GROUP BY orders.order_date) AS order_quantity;


10-- Determine the top 3 most ordered pizza types based on revenue.

SELECT pizza_types.name,
SUM(order_details.quantity * pizzas.price)
 AS revenu FROM order_details JOIN pizzas 
 ON order_details.pizza_id = pizzas.pizza_id
JOIN pizza_types ON 
pizzas.pizza_type_id = pizza_types.pizza_type_id
GROUP BY pizza_types.name
ORDER BY revenue DESC LIMIT 3;


11-- Calculate the percentage contribution of each pizza type to total revenue.


SELECT pizza_types.category,
ROUND(SUM(pizzas.price * order_details.quantity) / (SELECT 
ROUND(SUM(order_details.quantity * pizzas.price),2) AS 
total_revenue FROM order_details JOIN pizzas ON
order_details.pizza_id = pizzas.pizza_id) * 100,
2) AS revenue FROM order_details JOIN pizzas 
ON order_details.pizza_id = pizzas.pizza_id JOIN
pizza_types ON pizzas.pizza_type_id = pizza_types.pizza_type_id
GROUP BY pizza_types.category;



12--  Analyze the cumulative revenue generated over time.

select order_date,revenue, sum(revenue) over (order by order_date )
as cum_revenue
from
(select orders.order_date,sum(order_details.quantity*pizzas.price)
 as revenue from pizzas join order_details on pizzas.pizza_id=order_details.pizza_id 
 join orders on order_details.order_id=orders.order_id
 group by orders.order_date) as sales;
 
 13-- Determine the top 3 most ordered pizza types based on revenue for each pizza category.
select category,name,revenue ,rn
from
(select category,name,revenue ,
rank() over (partition by category order by revenue desc ) as rn
from
(select pizza_types.category, pizza_types.name ,
 sum(order_details.quantity*pizzas.price) as revenue from  pizza_types
 join pizzas on pizza_types.pizza_type_id=pizzas.pizza_type_id 
 join order_details on pizzas.pizza_id=order_details.pizza_id
 group by pizza_types.category,pizza_types.name) as a ) as b
 where rn<=3 ;
 
